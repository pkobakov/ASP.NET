/**
 * Minified by jsDelivr using Terser v5.3.5.
 * Original file: /npm/@aspnet/signalr@1.0.27/dist/cjs/HubConnectionBuilder.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var HttpConnection_1=require("./HttpConnection"),HubConnection_1=require("./HubConnection"),JsonHubProtocol_1=require("./JsonHubProtocol"),Loggers_1=require("./Loggers"),Utils_1=require("./Utils"),HubConnectionBuilder=function(){function o(){}return o.prototype.configureLogging=function(o){return Utils_1.Arg.isRequired(o,"logging"),isLogger(o)?this.logger=o:this.logger=new Utils_1.ConsoleLogger(o),this},o.prototype.withUrl=function(o,t){return Utils_1.Arg.isRequired(o,"url"),this.url=o,this.httpConnectionOptions="object"==typeof t?t:{transport:t},this},o.prototype.withHubProtocol=function(o){return Utils_1.Arg.isRequired(o,"protocol"),this.protocol=o,this},o.prototype.build=function(){var o=this.httpConnectionOptions||{};if(void 0===o.logger&&(o.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");var t=new HttpConnection_1.HttpConnection(this.url,o);return HubConnection_1.HubConnection.create(t,this.logger||Loggers_1.NullLogger.instance,this.protocol||new JsonHubProtocol_1.JsonHubProtocol)},o}();function isLogger(o){return void 0!==o.log}exports.HubConnectionBuilder=HubConnectionBuilder;
//# sourceMappingURL=/sm/e139a0a7b1dc8385cc642a32231e2f8f48c40048c7cb88007918f05ef1c8b666.map